package components

import (
	"os"
	"log"
	"strings"
	"strconv"
)

func getImages() []string {
	images := []string{}

	c, err := os.ReadDir("assets/images/examples")
	if err != nil {
		log.Fatal(err)
	}

	for _, entry := range c {
		if strings.Contains(entry.Name(), "cropped") {
			images = append(images, entry.Name())
		}
	}

	return images
}

templ examples() {
	<div class="space-x-4 w-full carousel">
		for i, image := range getImages() {
			<div id={ "example-" + strconv.Itoa(i) } class="relative w-full carousel-item">
				<img
					src={ "assets/images/examples/" + image }
					class="w-full h-auto rounded-box"
					loading="lazy"
					alt="Пример упражнений"
				/>
				<div class="flex absolute right-5 left-5 top-1/2 justify-between transform -translate-y-1/2">
					switch i {
						case 0:
							<a href={ templ.URL("#example-" + strconv.Itoa(len(getImages())-1)) } class="btn btn-circle btn-sm">❮</a>
							<a href={ templ.URL("#example-" + strconv.Itoa(i+1)) } class="btn btn-circle">❯</a>
						case len(getImages())-1:
							<a href={ templ.URL("#example-" + strconv.Itoa(i-1)) } class="btn btn-circle">❮</a>
							<a href={ templ.URL("#example-" + strconv.Itoa(0)) } class="btn btn-circle">❯</a>
						default:
							<a href={ templ.URL("#example-" + strconv.Itoa(i-1)) } class="btn btn-circle">❮</a>
							<a href={ templ.URL("#example-" + strconv.Itoa(i+1)) } class="btn btn-circle">❯</a>
					}
				</div>
			</div>
		}
	</div>
}
